image: "python:3.7"

stages:
  - pre_build
  - deploy
  - deploy_after
  - deploy_layer

pre_build:write_access:
  stage: pre_build
  before_script:
    - rm -rf ~/.aws/ && mkdir -p ~/.aws/
    - echo [default] >> ~/.aws/config
    - echo region = $IOT4_AWS_DEFAULT_REGION >> ~/.aws/config
    - echo [default] >> ~/.aws/credentials
    - echo aws_access_key_id = ${IOT4_AWS_ACCESS_KEY_ID} >> ~/.aws/credentials
    - echo aws_secret_access_key = ${IOT4_AWS_SECRET_ACCESS_KEY} >> ~/.aws/credentials
  script:
    - cp -r ~/.aws/credentials ~/.aws/config ./
  artifacts:
    paths:
      - credentials
      - config

deploy_private:
  stage: deploy
  before_script:
    - pip install wheel
    - pip install twine
    - python setup.py bdist_wheel
  script:
    - twine upload --username hongkang2 --password He8JGUiK dist/* --repository-url http://52.81.42.99:31187/
  only:
    - tags

deploy_after:
  stage: deploy_after
  script:
    - echo ${CI_COMMIT_TAG}
    - pip install spider_layer==${CI_COMMIT_TAG} -i http://52.81.42.99:31187/simple --trusted-host 52.81.42.99 -t ./python
  only:
    - tags

deploy:layer:
  stage: deploy_layer
  variables:
    STAGE: "dev"
    REGION: "$IOT4_AWS_DEFAULT_REGION"
    SERVICE_NAME: $CI_PROJECT_NAME
  before_script:
    - apt-get update
    - apt-get install nodejs -y
    - rm -rf ~/.aws/ && mkdir ~/.aws && cp -r credentials config ~/.aws/
    - npm i serverless-plugin-aws-cn-principal -D
    - echo $stage
  script:
    - rm python.zip
    - zip -r python.zip python
    - serverless deploy --region ${REGION} --stage ${STAGE} --tag ${CI_COMMIT_TAG}
  only:
    - tags
